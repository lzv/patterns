Паттерн стратегия инкапсулирует алгоритм в объекте. Таким образом, можно добавлять различные варианты алгоритмов, не затрагивая классы, к которым эти алгоритмы будут применяться.

Паттерн применяется в следующих случаях:
- Есть множество классов, различающихся только поведением. Поведение можно инкапсулировать в объектах, и параметризировать ими исходный класс.
- Либо в одном классе много поведений, которые выбираются условными операторами. Можно сделать аналогично.
- Есть разные варианты алгоритмов и/или варианты одного алгоритма (например, с разными параметрами по быстродействию и занимаемой памяти), применяемые к одному и тому же классу или иерархии классов. 
- В алгоритме есть данные, которые не нужно знать исходному классу. 

Обычно для алгоритмов создается свой интерфейс, и все классы алгоритмов его наследуют. Но можно обойтись и без этого, если сделать исходный класс в виде шаблона, параметром которого будет класс алгоритма.
