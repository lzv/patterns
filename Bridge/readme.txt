Предположим, есть иерархия классов графических объектов - окно, кнопка, иконка, и т.п. И их нужно отрисовывать для разных графических систем. Для каждого вида объектов можно сделать свой класс-наследник для каждой графической системы. Но при этом становится неудобно добавлять классы - для нового вида объектов нужно реализацию под все графические системы, а для новой графической системы - реализовать все объекты. 
Когда число классов начинает сильно увеличиваться, приходит время разделить абстракцию и реализацию. Создается одна иерархия для графических объектов - абстракция, а реализация выносится в другую иерархию, с отдельным классом-наследником для каждой графической системы (код реализации, ранее бывший в разных методах разных классов, как бы переходит в разные методы одного класса - конкретной реализации). При этом абстракция включает в себя объект реализации, и при вызове методов графических объектов в свою очередь вызывает методы реализации.
Кроме уменьшения количества классов, имеются дополнительные плюсы: становится возможным независимое изменение абстракции и реализации, а так же их можно скомпилировать независимо. 
В демонстрационном коде приводится пример с графическими объектами и разными графическими системами. Но так как код выполняется в консоли, то вместо самого рисования выводится текст о выполняемом действии.
